// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241217190916_Add-CartItems-And-ShoppingCarts")]
    partial class AddCartItemsAndShoppingCarts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("SpecialTag")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Категория 3",
                            Description = "Работы соответствующих оценить проблем форм стороны гражданского организационной.",
                            Image = "https://placehold.co/200",
                            Name = "Лоснящийся Пластиковый Сабо",
                            Price = 803.78999999999996,
                            SpecialTag = "Популярный"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Категория 3",
                            Description = "Материально-технической организации кадровой.",
                            Image = "https://placehold.co/200",
                            Name = "Эргономичный Пластиковый Куртка",
                            Price = 937.02999999999997,
                            SpecialTag = "Популярный"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Категория 3",
                            Description = "Роль принимаемых правительством направлений работы принципов отметить.",
                            Image = "https://placehold.co/200",
                            Name = "Лоснящийся Меховой Свитер",
                            Price = 96.859999999999999,
                            SpecialTag = "Новинка"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Категория 2",
                            Description = "Уровня активом сущности создание.",
                            Image = "https://placehold.co/200",
                            Name = "Практичный Неодимовый Автомобиль",
                            Price = 84.239999999999995,
                            SpecialTag = "Новинка"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Категория 2",
                            Description = "Формировании задания повседневной а.",
                            Image = "https://placehold.co/200",
                            Name = "Грубый Натуральный Кепка",
                            Price = 67.329999999999998,
                            SpecialTag = "Рекомендуемый"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Категория 2",
                            Description = "Предложений базы активности интересный для.",
                            Image = "https://placehold.co/200",
                            Name = "Интеллектуальный Меховой Шарф",
                            Price = 754.75,
                            SpecialTag = "Популярный"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Категория 2",
                            Description = "Плановых задача интересный же а систему поставленных правительством порядка.",
                            Image = "https://placehold.co/200",
                            Name = "Невероятный Меховой Кулон",
                            Price = 59.850000000000001,
                            SpecialTag = "Новинка"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Категория 2",
                            Description = "Значимость процесс информационно-пропогандистское сущности базы дальнейших.",
                            Image = "https://placehold.co/200",
                            Name = "Лоснящийся Кожанный Компьютер",
                            Price = 669.16999999999996,
                            SpecialTag = "Рекомендуемый"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Категория 3",
                            Description = "Практика настолько сущности нами прежде информационно-пропогандистское сфера постоянный.",
                            Image = "https://placehold.co/200",
                            Name = "Фантастический Хлопковый Портмоне",
                            Price = 121.68000000000001,
                            SpecialTag = "Рекомендуемый"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Категория 1",
                            Description = "Развития общества показывает активом всего потребностям выбранный напрямую.",
                            Image = "https://placehold.co/200",
                            Name = "Большой Неодимовый Свитер",
                            Price = 737.08000000000004,
                            SpecialTag = "Новинка"
                        },
                        new
                        {
                            Id = 11,
                            Category = "Категория 1",
                            Description = "Количественный последовательного высокотехнологичная значительной таким значение дальнейшее.",
                            Image = "https://placehold.co/200",
                            Name = "Великолепный Стальной Кепка",
                            Price = 861.22000000000003,
                            SpecialTag = "Популярный"
                        },
                        new
                        {
                            Id = 12,
                            Category = "Категория 2",
                            Description = "Разработке практика всего нашей нашей идейные кругу начало.",
                            Image = "https://placehold.co/200",
                            Name = "Маленький Неодимовый Плащ",
                            Price = 865.74000000000001,
                            SpecialTag = "Популярный"
                        },
                        new
                        {
                            Id = 13,
                            Category = "Категория 3",
                            Description = "Рост от уточнения реализация внедрения финансовых.",
                            Image = "https://placehold.co/200",
                            Name = "Интеллектуальный Бетонный Майка",
                            Price = 62.859999999999999,
                            SpecialTag = "Новинка"
                        },
                        new
                        {
                            Id = 14,
                            Category = "Категория 2",
                            Description = "Реализация обучения разнообразный равным нами дальнейшее показывает демократической.",
                            Image = "https://placehold.co/200",
                            Name = "Лоснящийся Натуральный Носки",
                            Price = 837.49000000000001,
                            SpecialTag = "Рекомендуемый"
                        },
                        new
                        {
                            Id = 15,
                            Category = "Категория 1",
                            Description = "Собой соответствующей настолько практика не способствует процесс.",
                            Image = "https://placehold.co/200",
                            Name = "Невероятный Стальной Кепка",
                            Price = 850.63,
                            SpecialTag = "Рекомендуемый"
                        },
                        new
                        {
                            Id = 16,
                            Category = "Категория 2",
                            Description = "Прогрессивного что обучения современного предложений реализация значение играет широкому активизации.",
                            Image = "https://placehold.co/200",
                            Name = "Великолепный Деревянный Кошелек",
                            Price = 33.880000000000003,
                            SpecialTag = "Популярный"
                        },
                        new
                        {
                            Id = 17,
                            Category = "Категория 2",
                            Description = "Уточнения отношении сущности таким следует гражданского представляет материально-технической интересный обуславливает.",
                            Image = "https://placehold.co/200",
                            Name = "Невероятный Кожанный Автомобиль",
                            Price = 895.38999999999999,
                            SpecialTag = "Рекомендуемый"
                        },
                        new
                        {
                            Id = 18,
                            Category = "Категория 2",
                            Description = "Нас роль широкому плановых активом.",
                            Image = "https://placehold.co/200",
                            Name = "Фантастический Резиновый Шарф",
                            Price = 256.31999999999999,
                            SpecialTag = "Рекомендуемый"
                        },
                        new
                        {
                            Id = 19,
                            Category = "Категория 1",
                            Description = "Значимость предпосылки же консультация эксперимент качества.",
                            Image = "https://placehold.co/200",
                            Name = "Большой Бетонный Берет",
                            Price = 560.74000000000001,
                            SpecialTag = "Популярный"
                        },
                        new
                        {
                            Id = 20,
                            Category = "Категория 2",
                            Description = "Кругу постоянный влечёт рост образом новых различных повышению.",
                            Image = "https://placehold.co/200",
                            Name = "Грубый Пластиковый Свитер",
                            Price = 411.10000000000002,
                            SpecialTag = "Рекомендуемый"
                        });
                });

            modelBuilder.Entity("Api.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Api.Models.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("AppUser");
                });

            modelBuilder.Entity("Api.Models.CartItem", b =>
                {
                    b.HasOne("Api.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Models.ShoppingCart", null)
                        .WithMany("CartItems")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api.Models.ShoppingCart", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
